{"ast":null,"code":"\"use strict\";\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function next() {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BaseTransaction = void 0;\n\nvar common_1 = __importDefault(require(\"@ethereumjs/common\"));\n\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\n\nvar types_1 = require(\"./types\");\n/**\n * This base class will likely be subject to further\n * refactoring along the introduction of additional tx types\n * on the Ethereum network.\n *\n * It is therefore not recommended to use directly.\n */\n\n\nvar BaseTransaction = function () {\n  function BaseTransaction(txData) {\n    /**\n     * List of tx type defining EIPs,\n     * e.g. 1559 (fee market) and 2930 (access lists)\n     * for FeeMarketEIP1559Transaction objects\n     */\n    this.activeCapabilities = [];\n    /**\n     * The default chain the tx falls back to if no Common\n     * is provided and if the chain can't be derived from\n     * a passed in chainId (only EIP-2718 typed txs) or\n     * EIP-155 signature (legacy txs).\n     *\n     * @hidden\n     */\n\n    this.DEFAULT_CHAIN = 'mainnet';\n    /**\n     * The default HF if the tx type is active on that HF\n     * or the first greater HF where the tx is active.\n     *\n     * @hidden\n     */\n\n    this.DEFAULT_HARDFORK = 'istanbul';\n    var nonce = txData.nonce,\n        gasLimit = txData.gasLimit,\n        to = txData.to,\n        value = txData.value,\n        data = txData.data,\n        v = txData.v,\n        r = txData.r,\n        s = txData.s,\n        type = txData.type;\n    this._type = new ethereumjs_util_1.BN(ethereumjs_util_1.toBuffer(type)).toNumber();\n    var toB = ethereumjs_util_1.toBuffer(to === '' ? '0x' : to);\n    var vB = ethereumjs_util_1.toBuffer(v === '' ? '0x' : v);\n    var rB = ethereumjs_util_1.toBuffer(r === '' ? '0x' : r);\n    var sB = ethereumjs_util_1.toBuffer(s === '' ? '0x' : s);\n    this.nonce = new ethereumjs_util_1.BN(ethereumjs_util_1.toBuffer(nonce === '' ? '0x' : nonce));\n    this.gasLimit = new ethereumjs_util_1.BN(ethereumjs_util_1.toBuffer(gasLimit === '' ? '0x' : gasLimit));\n    this.to = toB.length > 0 ? new ethereumjs_util_1.Address(toB) : undefined;\n    this.value = new ethereumjs_util_1.BN(ethereumjs_util_1.toBuffer(value === '' ? '0x' : value));\n    this.data = ethereumjs_util_1.toBuffer(data === '' ? '0x' : data);\n    this.v = vB.length > 0 ? new ethereumjs_util_1.BN(vB) : undefined;\n    this.r = rB.length > 0 ? new ethereumjs_util_1.BN(rB) : undefined;\n    this.s = sB.length > 0 ? new ethereumjs_util_1.BN(sB) : undefined;\n\n    this._validateCannotExceedMaxInteger({\n      nonce: this.nonce,\n      gasLimit: this.gasLimit,\n      value: this.value,\n      r: this.r,\n      s: this.s\n    });\n  }\n\n  Object.defineProperty(BaseTransaction.prototype, \"transactionType\", {\n    /**\n     * Alias for {@link BaseTransaction.type}\n     *\n     * @deprecated Use `type` instead\n     */\n    get: function get() {\n      return this.type;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BaseTransaction.prototype, \"type\", {\n    /**\n     * Returns the transaction type.\n     *\n     * Note: legacy txs will return tx type `0`.\n     */\n    get: function get() {\n      return this._type;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * Checks if a tx type defining capability is active\n   * on a tx, for example the EIP-1559 fee market mechanism\n   * or the EIP-2930 access list feature.\n   *\n   * Note that this is different from the tx type itself,\n   * so EIP-2930 access lists can very well be active\n   * on an EIP-1559 tx for example.\n   *\n   * This method can be useful for feature checks if the\n   * tx type is unknown (e.g. when instantiated with\n   * the tx factory).\n   *\n   * See `Capabilites` in the `types` module for a reference\n   * on all supported capabilities.\n   */\n\n  BaseTransaction.prototype.supports = function (capability) {\n    return this.activeCapabilities.includes(capability);\n  };\n\n  BaseTransaction.prototype.validate = function (stringError) {\n    if (stringError === void 0) {\n      stringError = false;\n    }\n\n    var errors = [];\n\n    if (this.getBaseFee().gt(this.gasLimit)) {\n      errors.push(\"gasLimit is too low. given \" + this.gasLimit + \", need at least \" + this.getBaseFee());\n    }\n\n    if (this.isSigned() && !this.verifySignature()) {\n      errors.push('Invalid Signature');\n    }\n\n    return stringError ? errors : errors.length === 0;\n  };\n  /**\n   * The minimum amount of gas the tx must have (DataFee + TxFee + Creation Fee)\n   */\n\n\n  BaseTransaction.prototype.getBaseFee = function () {\n    var fee = this.getDataFee().addn(this.common.param('gasPrices', 'tx'));\n\n    if (this.common.gteHardfork('homestead') && this.toCreationAddress()) {\n      fee.iaddn(this.common.param('gasPrices', 'txCreation'));\n    }\n\n    return fee;\n  };\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n\n\n  BaseTransaction.prototype.getDataFee = function () {\n    var txDataZero = this.common.param('gasPrices', 'txDataZero');\n    var txDataNonZero = this.common.param('gasPrices', 'txDataNonZero');\n    var cost = 0;\n\n    for (var i = 0; i < this.data.length; i++) {\n      this.data[i] === 0 ? cost += txDataZero : cost += txDataNonZero;\n    }\n\n    return new ethereumjs_util_1.BN(cost);\n  };\n  /**\n   * If the tx's `to` is to the creation address\n   */\n\n\n  BaseTransaction.prototype.toCreationAddress = function () {\n    return this.to === undefined || this.to.buf.length === 0;\n  };\n\n  BaseTransaction.prototype.isSigned = function () {\n    var _a = this,\n        v = _a.v,\n        r = _a.r,\n        s = _a.s;\n\n    if (this.type === 0) {\n      if (!v || !r || !s) {\n        return false;\n      } else {\n        return true;\n      }\n    } else {\n      if (v === undefined || !r || !s) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n  };\n  /**\n   * Determines if the signature is valid\n   */\n\n\n  BaseTransaction.prototype.verifySignature = function () {\n    try {\n      // Main signature verification is done in `getSenderPublicKey()`\n      var publicKey = this.getSenderPublicKey();\n      return ethereumjs_util_1.unpadBuffer(publicKey).length !== 0;\n    } catch (e) {\n      return false;\n    }\n  };\n  /**\n   * Returns the sender's address\n   */\n\n\n  BaseTransaction.prototype.getSenderAddress = function () {\n    return new ethereumjs_util_1.Address(ethereumjs_util_1.publicToAddress(this.getSenderPublicKey()));\n  };\n  /**\n   * Signs a transaction.\n   *\n   * Note that the signed tx is returned as a new object,\n   * use as follows:\n   * ```javascript\n   * const signedTx = tx.sign(privateKey)\n   * ```\n   */\n\n\n  BaseTransaction.prototype.sign = function (privateKey) {\n    if (privateKey.length !== 32) {\n      throw new Error('Private key must be 32 bytes in length.');\n    } // Hack for the constellation that we have got a legacy tx after spuriousDragon with a non-EIP155 conforming signature\n    // and want to recreate a signature (where EIP155 should be applied)\n    // Leaving this hack lets the legacy.spec.ts -> sign(), verifySignature() test fail\n    // 2021-06-23\n\n\n    var hackApplied = false;\n\n    if (this.type === 0 && this.common.gteHardfork('spuriousDragon') && !this.supports(types_1.Capability.EIP155ReplayProtection)) {\n      this.activeCapabilities.push(types_1.Capability.EIP155ReplayProtection);\n      hackApplied = true;\n    }\n\n    var msgHash = this.getMessageToSign(true);\n\n    var _a = ethereumjs_util_1.ecsign(msgHash, privateKey),\n        v = _a.v,\n        r = _a.r,\n        s = _a.s;\n\n    var tx = this._processSignature(v, r, s); // Hack part 2\n\n\n    if (hackApplied) {\n      var index = this.activeCapabilities.indexOf(types_1.Capability.EIP155ReplayProtection);\n\n      if (index > -1) {\n        this.activeCapabilities.splice(index, 1);\n      }\n    }\n\n    return tx;\n  };\n  /**\n   * Does chain ID checks on common and returns a common\n   * to be used on instantiation\n   * @hidden\n   *\n   * @param common - {@link Common} instance from tx options\n   * @param chainId - Chain ID from tx options (typed txs) or signature (legacy tx)\n   */\n\n\n  BaseTransaction.prototype._getCommon = function (common, chainId) {\n    var _a; // Chain ID provided\n\n\n    if (chainId) {\n      var chainIdBN = new ethereumjs_util_1.BN(ethereumjs_util_1.toBuffer(chainId));\n\n      if (common) {\n        if (!common.chainIdBN().eq(chainIdBN)) {\n          throw new Error('The chain ID does not match the chain ID of Common');\n        } // Common provided, chain ID does match\n        // -> Return provided Common\n\n\n        return common.copy();\n      } else {\n        if (common_1.default.isSupportedChainId(chainIdBN)) {\n          // No Common, chain ID supported by Common\n          // -> Instantiate Common with chain ID\n          return new common_1.default({\n            chain: chainIdBN,\n            hardfork: this.DEFAULT_HARDFORK\n          });\n        } else {\n          // No Common, chain ID not supported by Common\n          // -> Instantiate custom Common derived from DEFAULT_CHAIN\n          return common_1.default.forCustomChain(this.DEFAULT_CHAIN, {\n            name: 'custom-chain',\n            networkId: chainIdBN,\n            chainId: chainIdBN\n          }, this.DEFAULT_HARDFORK);\n        }\n      }\n    } else {\n      // No chain ID provided\n      // -> return Common provided or create new default Common\n      return (_a = common === null || common === void 0 ? void 0 : common.copy()) !== null && _a !== void 0 ? _a : new common_1.default({\n        chain: this.DEFAULT_CHAIN,\n        hardfork: this.DEFAULT_HARDFORK\n      });\n    }\n  };\n\n  BaseTransaction.prototype._validateCannotExceedMaxInteger = function (values, bits) {\n    var e_1, _a;\n\n    if (bits === void 0) {\n      bits = 53;\n    }\n\n    try {\n      for (var _b = __values(Object.entries(values)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var _d = __read(_c.value, 2),\n            key = _d[0],\n            value = _d[1];\n\n        if (bits === 53) {\n          if (value === null || value === void 0 ? void 0 : value.gt(ethereumjs_util_1.MAX_INTEGER)) {\n            throw new Error(key + \" cannot exceed MAX_INTEGER, given \" + value);\n          }\n        } else if (bits === 256) {\n          if (value === null || value === void 0 ? void 0 : value.gte(ethereumjs_util_1.TWO_POW256)) {\n            throw new Error(key + \" must be less than 2^256, given \" + value);\n          }\n        } else {\n          throw new Error('unimplemented bits value');\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n\n  return BaseTransaction;\n}();\n\nexports.BaseTransaction = BaseTransaction;","map":{"version":3,"sources":["/home/cynefin/Desktop/Angular Basics/blog/node_modules/@ethereumjs/tx/dist.browser/baseTransaction.js"],"names":["__values","o","s","Symbol","iterator","m","i","call","length","next","value","done","TypeError","__read","n","r","ar","e","push","error","__importDefault","mod","__esModule","Object","defineProperty","exports","BaseTransaction","common_1","require","ethereumjs_util_1","types_1","txData","activeCapabilities","DEFAULT_CHAIN","DEFAULT_HARDFORK","nonce","gasLimit","to","data","v","type","_type","BN","toBuffer","toNumber","toB","vB","rB","sB","Address","undefined","_validateCannotExceedMaxInteger","prototype","get","enumerable","configurable","supports","capability","includes","validate","stringError","errors","getBaseFee","gt","isSigned","verifySignature","fee","getDataFee","addn","common","param","gteHardfork","toCreationAddress","iaddn","txDataZero","txDataNonZero","cost","buf","_a","publicKey","getSenderPublicKey","unpadBuffer","getSenderAddress","publicToAddress","sign","privateKey","Error","hackApplied","Capability","EIP155ReplayProtection","msgHash","getMessageToSign","ecsign","tx","_processSignature","index","indexOf","splice","_getCommon","chainId","chainIdBN","eq","copy","default","isSupportedChainId","chain","hardfork","forCustomChain","name","networkId","values","bits","e_1","_b","entries","_c","_d","key","MAX_INTEGER","gte","TWO_POW256","e_1_1","return"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseTransaction = void 0;\nvar common_1 = __importDefault(require(\"@ethereumjs/common\"));\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar types_1 = require(\"./types\");\n/**\n * This base class will likely be subject to further\n * refactoring along the introduction of additional tx types\n * on the Ethereum network.\n *\n * It is therefore not recommended to use directly.\n */\nvar BaseTransaction = /** @class */ (function () {\n    function BaseTransaction(txData) {\n        /**\n         * List of tx type defining EIPs,\n         * e.g. 1559 (fee market) and 2930 (access lists)\n         * for FeeMarketEIP1559Transaction objects\n         */\n        this.activeCapabilities = [];\n        /**\n         * The default chain the tx falls back to if no Common\n         * is provided and if the chain can't be derived from\n         * a passed in chainId (only EIP-2718 typed txs) or\n         * EIP-155 signature (legacy txs).\n         *\n         * @hidden\n         */\n        this.DEFAULT_CHAIN = 'mainnet';\n        /**\n         * The default HF if the tx type is active on that HF\n         * or the first greater HF where the tx is active.\n         *\n         * @hidden\n         */\n        this.DEFAULT_HARDFORK = 'istanbul';\n        var nonce = txData.nonce, gasLimit = txData.gasLimit, to = txData.to, value = txData.value, data = txData.data, v = txData.v, r = txData.r, s = txData.s, type = txData.type;\n        this._type = new ethereumjs_util_1.BN(ethereumjs_util_1.toBuffer(type)).toNumber();\n        var toB = ethereumjs_util_1.toBuffer(to === '' ? '0x' : to);\n        var vB = ethereumjs_util_1.toBuffer(v === '' ? '0x' : v);\n        var rB = ethereumjs_util_1.toBuffer(r === '' ? '0x' : r);\n        var sB = ethereumjs_util_1.toBuffer(s === '' ? '0x' : s);\n        this.nonce = new ethereumjs_util_1.BN(ethereumjs_util_1.toBuffer(nonce === '' ? '0x' : nonce));\n        this.gasLimit = new ethereumjs_util_1.BN(ethereumjs_util_1.toBuffer(gasLimit === '' ? '0x' : gasLimit));\n        this.to = toB.length > 0 ? new ethereumjs_util_1.Address(toB) : undefined;\n        this.value = new ethereumjs_util_1.BN(ethereumjs_util_1.toBuffer(value === '' ? '0x' : value));\n        this.data = ethereumjs_util_1.toBuffer(data === '' ? '0x' : data);\n        this.v = vB.length > 0 ? new ethereumjs_util_1.BN(vB) : undefined;\n        this.r = rB.length > 0 ? new ethereumjs_util_1.BN(rB) : undefined;\n        this.s = sB.length > 0 ? new ethereumjs_util_1.BN(sB) : undefined;\n        this._validateCannotExceedMaxInteger({\n            nonce: this.nonce,\n            gasLimit: this.gasLimit,\n            value: this.value,\n            r: this.r,\n            s: this.s,\n        });\n    }\n    Object.defineProperty(BaseTransaction.prototype, \"transactionType\", {\n        /**\n         * Alias for {@link BaseTransaction.type}\n         *\n         * @deprecated Use `type` instead\n         */\n        get: function () {\n            return this.type;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseTransaction.prototype, \"type\", {\n        /**\n         * Returns the transaction type.\n         *\n         * Note: legacy txs will return tx type `0`.\n         */\n        get: function () {\n            return this._type;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Checks if a tx type defining capability is active\n     * on a tx, for example the EIP-1559 fee market mechanism\n     * or the EIP-2930 access list feature.\n     *\n     * Note that this is different from the tx type itself,\n     * so EIP-2930 access lists can very well be active\n     * on an EIP-1559 tx for example.\n     *\n     * This method can be useful for feature checks if the\n     * tx type is unknown (e.g. when instantiated with\n     * the tx factory).\n     *\n     * See `Capabilites` in the `types` module for a reference\n     * on all supported capabilities.\n     */\n    BaseTransaction.prototype.supports = function (capability) {\n        return this.activeCapabilities.includes(capability);\n    };\n    BaseTransaction.prototype.validate = function (stringError) {\n        if (stringError === void 0) { stringError = false; }\n        var errors = [];\n        if (this.getBaseFee().gt(this.gasLimit)) {\n            errors.push(\"gasLimit is too low. given \" + this.gasLimit + \", need at least \" + this.getBaseFee());\n        }\n        if (this.isSigned() && !this.verifySignature()) {\n            errors.push('Invalid Signature');\n        }\n        return stringError ? errors : errors.length === 0;\n    };\n    /**\n     * The minimum amount of gas the tx must have (DataFee + TxFee + Creation Fee)\n     */\n    BaseTransaction.prototype.getBaseFee = function () {\n        var fee = this.getDataFee().addn(this.common.param('gasPrices', 'tx'));\n        if (this.common.gteHardfork('homestead') && this.toCreationAddress()) {\n            fee.iaddn(this.common.param('gasPrices', 'txCreation'));\n        }\n        return fee;\n    };\n    /**\n     * The amount of gas paid for the data in this tx\n     */\n    BaseTransaction.prototype.getDataFee = function () {\n        var txDataZero = this.common.param('gasPrices', 'txDataZero');\n        var txDataNonZero = this.common.param('gasPrices', 'txDataNonZero');\n        var cost = 0;\n        for (var i = 0; i < this.data.length; i++) {\n            this.data[i] === 0 ? (cost += txDataZero) : (cost += txDataNonZero);\n        }\n        return new ethereumjs_util_1.BN(cost);\n    };\n    /**\n     * If the tx's `to` is to the creation address\n     */\n    BaseTransaction.prototype.toCreationAddress = function () {\n        return this.to === undefined || this.to.buf.length === 0;\n    };\n    BaseTransaction.prototype.isSigned = function () {\n        var _a = this, v = _a.v, r = _a.r, s = _a.s;\n        if (this.type === 0) {\n            if (!v || !r || !s) {\n                return false;\n            }\n            else {\n                return true;\n            }\n        }\n        else {\n            if (v === undefined || !r || !s) {\n                return false;\n            }\n            else {\n                return true;\n            }\n        }\n    };\n    /**\n     * Determines if the signature is valid\n     */\n    BaseTransaction.prototype.verifySignature = function () {\n        try {\n            // Main signature verification is done in `getSenderPublicKey()`\n            var publicKey = this.getSenderPublicKey();\n            return ethereumjs_util_1.unpadBuffer(publicKey).length !== 0;\n        }\n        catch (e) {\n            return false;\n        }\n    };\n    /**\n     * Returns the sender's address\n     */\n    BaseTransaction.prototype.getSenderAddress = function () {\n        return new ethereumjs_util_1.Address(ethereumjs_util_1.publicToAddress(this.getSenderPublicKey()));\n    };\n    /**\n     * Signs a transaction.\n     *\n     * Note that the signed tx is returned as a new object,\n     * use as follows:\n     * ```javascript\n     * const signedTx = tx.sign(privateKey)\n     * ```\n     */\n    BaseTransaction.prototype.sign = function (privateKey) {\n        if (privateKey.length !== 32) {\n            throw new Error('Private key must be 32 bytes in length.');\n        }\n        // Hack for the constellation that we have got a legacy tx after spuriousDragon with a non-EIP155 conforming signature\n        // and want to recreate a signature (where EIP155 should be applied)\n        // Leaving this hack lets the legacy.spec.ts -> sign(), verifySignature() test fail\n        // 2021-06-23\n        var hackApplied = false;\n        if (this.type === 0 &&\n            this.common.gteHardfork('spuriousDragon') &&\n            !this.supports(types_1.Capability.EIP155ReplayProtection)) {\n            this.activeCapabilities.push(types_1.Capability.EIP155ReplayProtection);\n            hackApplied = true;\n        }\n        var msgHash = this.getMessageToSign(true);\n        var _a = ethereumjs_util_1.ecsign(msgHash, privateKey), v = _a.v, r = _a.r, s = _a.s;\n        var tx = this._processSignature(v, r, s);\n        // Hack part 2\n        if (hackApplied) {\n            var index = this.activeCapabilities.indexOf(types_1.Capability.EIP155ReplayProtection);\n            if (index > -1) {\n                this.activeCapabilities.splice(index, 1);\n            }\n        }\n        return tx;\n    };\n    /**\n     * Does chain ID checks on common and returns a common\n     * to be used on instantiation\n     * @hidden\n     *\n     * @param common - {@link Common} instance from tx options\n     * @param chainId - Chain ID from tx options (typed txs) or signature (legacy tx)\n     */\n    BaseTransaction.prototype._getCommon = function (common, chainId) {\n        var _a;\n        // Chain ID provided\n        if (chainId) {\n            var chainIdBN = new ethereumjs_util_1.BN(ethereumjs_util_1.toBuffer(chainId));\n            if (common) {\n                if (!common.chainIdBN().eq(chainIdBN)) {\n                    throw new Error('The chain ID does not match the chain ID of Common');\n                }\n                // Common provided, chain ID does match\n                // -> Return provided Common\n                return common.copy();\n            }\n            else {\n                if (common_1.default.isSupportedChainId(chainIdBN)) {\n                    // No Common, chain ID supported by Common\n                    // -> Instantiate Common with chain ID\n                    return new common_1.default({ chain: chainIdBN, hardfork: this.DEFAULT_HARDFORK });\n                }\n                else {\n                    // No Common, chain ID not supported by Common\n                    // -> Instantiate custom Common derived from DEFAULT_CHAIN\n                    return common_1.default.forCustomChain(this.DEFAULT_CHAIN, {\n                        name: 'custom-chain',\n                        networkId: chainIdBN,\n                        chainId: chainIdBN,\n                    }, this.DEFAULT_HARDFORK);\n                }\n            }\n        }\n        else {\n            // No chain ID provided\n            // -> return Common provided or create new default Common\n            return ((_a = common === null || common === void 0 ? void 0 : common.copy()) !== null && _a !== void 0 ? _a : new common_1.default({ chain: this.DEFAULT_CHAIN, hardfork: this.DEFAULT_HARDFORK }));\n        }\n    };\n    BaseTransaction.prototype._validateCannotExceedMaxInteger = function (values, bits) {\n        var e_1, _a;\n        if (bits === void 0) { bits = 53; }\n        try {\n            for (var _b = __values(Object.entries(values)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var _d = __read(_c.value, 2), key = _d[0], value = _d[1];\n                if (bits === 53) {\n                    if (value === null || value === void 0 ? void 0 : value.gt(ethereumjs_util_1.MAX_INTEGER)) {\n                        throw new Error(key + \" cannot exceed MAX_INTEGER, given \" + value);\n                    }\n                }\n                else if (bits === 256) {\n                    if (value === null || value === void 0 ? void 0 : value.gte(ethereumjs_util_1.TWO_POW256)) {\n                        throw new Error(key + \" must be less than 2^256, given \" + value);\n                    }\n                }\n                else {\n                    throw new Error('unimplemented bits value');\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    return BaseTransaction;\n}());\nexports.BaseTransaction = BaseTransaction;\n"]},"metadata":{},"sourceType":"script"}