{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.defineProperties = void 0;\n\nvar assert_1 = __importDefault(require(\"assert\"));\n\nvar ethjsUtil = __importStar(require(\"ethjs-util\"));\n\nvar rlp = __importStar(require(\"rlp\"));\n\nvar bytes_1 = require(\"./bytes\");\n/**\n * Defines properties on a `Object`. It make the assumption that underlying data is binary.\n * @param self the `Object` to define properties on\n * @param fields an array fields to define. Fields can contain:\n * * `name` - the name of the properties\n * * `length` - the number of bytes the field can have\n * * `allowLess` - if the field can be less than the length\n * * `allowEmpty`\n * @param data data to be validated against the definitions\n * @deprecated\n */\n\n\nexports.defineProperties = function (self, fields, data) {\n  self.raw = [];\n  self._fields = []; // attach the `toJSON`\n\n  self.toJSON = function (label) {\n    if (label === void 0) {\n      label = false;\n    }\n\n    if (label) {\n      var obj_1 = {};\n\n      self._fields.forEach(function (field) {\n        obj_1[field] = \"0x\" + self[field].toString('hex');\n      });\n\n      return obj_1;\n    }\n\n    return bytes_1.baToJSON(self.raw);\n  };\n\n  self.serialize = function serialize() {\n    return rlp.encode(self.raw);\n  };\n\n  fields.forEach(function (field, i) {\n    self._fields.push(field.name);\n\n    function getter() {\n      return self.raw[i];\n    }\n\n    function setter(v) {\n      v = bytes_1.toBuffer(v);\n\n      if (v.toString('hex') === '00' && !field.allowZero) {\n        v = Buffer.allocUnsafe(0);\n      }\n\n      if (field.allowLess && field.length) {\n        v = bytes_1.unpadBuffer(v);\n        assert_1.default(field.length >= v.length, \"The field \" + field.name + \" must not have more \" + field.length + \" bytes\");\n      } else if (!(field.allowZero && v.length === 0) && field.length) {\n        assert_1.default(field.length === v.length, \"The field \" + field.name + \" must have byte length of \" + field.length);\n      }\n\n      self.raw[i] = v;\n    }\n\n    Object.defineProperty(self, field.name, {\n      enumerable: true,\n      configurable: true,\n      get: getter,\n      set: setter\n    });\n\n    if (field.default) {\n      self[field.name] = field.default;\n    } // attach alias\n\n\n    if (field.alias) {\n      Object.defineProperty(self, field.alias, {\n        enumerable: false,\n        configurable: true,\n        set: setter,\n        get: getter\n      });\n    }\n  }); // if the constuctor is passed data\n\n  if (data) {\n    if (typeof data === 'string') {\n      data = Buffer.from(ethjsUtil.stripHexPrefix(data), 'hex');\n    }\n\n    if (Buffer.isBuffer(data)) {\n      data = rlp.decode(data);\n    }\n\n    if (Array.isArray(data)) {\n      if (data.length > self._fields.length) {\n        throw new Error('wrong number of fields in data');\n      } // make sure all the items are buffers\n\n\n      data.forEach(function (d, i) {\n        self[self._fields[i]] = bytes_1.toBuffer(d);\n      });\n    } else if (typeof data === 'object') {\n      var keys_1 = Object.keys(data);\n      fields.forEach(function (field) {\n        if (keys_1.indexOf(field.name) !== -1) self[field.name] = data[field.name];\n        if (keys_1.indexOf(field.alias) !== -1) self[field.alias] = data[field.alias];\n      });\n    } else {\n      throw new Error('invalid data');\n    }\n  }\n};","map":{"version":3,"sources":["/home/cynefin/Desktop/Angular Basics/blog/node_modules/ethereumjs-util/dist.browser/object.js"],"names":["__createBinding","Object","create","o","m","k","k2","undefined","defineProperty","enumerable","get","__setModuleDefault","v","value","__importStar","mod","__esModule","result","hasOwnProperty","call","__importDefault","exports","defineProperties","assert_1","require","ethjsUtil","rlp","bytes_1","self","fields","data","raw","_fields","toJSON","label","obj_1","forEach","field","toString","baToJSON","serialize","encode","i","push","name","getter","setter","toBuffer","allowZero","Buffer","allocUnsafe","allowLess","length","unpadBuffer","default","configurable","set","alias","from","stripHexPrefix","isBuffer","decode","Array","isArray","Error","d","keys_1","keys","indexOf"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defineProperties = void 0;\nvar assert_1 = __importDefault(require(\"assert\"));\nvar ethjsUtil = __importStar(require(\"ethjs-util\"));\nvar rlp = __importStar(require(\"rlp\"));\nvar bytes_1 = require(\"./bytes\");\n/**\n * Defines properties on a `Object`. It make the assumption that underlying data is binary.\n * @param self the `Object` to define properties on\n * @param fields an array fields to define. Fields can contain:\n * * `name` - the name of the properties\n * * `length` - the number of bytes the field can have\n * * `allowLess` - if the field can be less than the length\n * * `allowEmpty`\n * @param data data to be validated against the definitions\n * @deprecated\n */\nexports.defineProperties = function (self, fields, data) {\n    self.raw = [];\n    self._fields = [];\n    // attach the `toJSON`\n    self.toJSON = function (label) {\n        if (label === void 0) { label = false; }\n        if (label) {\n            var obj_1 = {};\n            self._fields.forEach(function (field) {\n                obj_1[field] = \"0x\" + self[field].toString('hex');\n            });\n            return obj_1;\n        }\n        return bytes_1.baToJSON(self.raw);\n    };\n    self.serialize = function serialize() {\n        return rlp.encode(self.raw);\n    };\n    fields.forEach(function (field, i) {\n        self._fields.push(field.name);\n        function getter() {\n            return self.raw[i];\n        }\n        function setter(v) {\n            v = bytes_1.toBuffer(v);\n            if (v.toString('hex') === '00' && !field.allowZero) {\n                v = Buffer.allocUnsafe(0);\n            }\n            if (field.allowLess && field.length) {\n                v = bytes_1.unpadBuffer(v);\n                assert_1.default(field.length >= v.length, \"The field \" + field.name + \" must not have more \" + field.length + \" bytes\");\n            }\n            else if (!(field.allowZero && v.length === 0) && field.length) {\n                assert_1.default(field.length === v.length, \"The field \" + field.name + \" must have byte length of \" + field.length);\n            }\n            self.raw[i] = v;\n        }\n        Object.defineProperty(self, field.name, {\n            enumerable: true,\n            configurable: true,\n            get: getter,\n            set: setter,\n        });\n        if (field.default) {\n            self[field.name] = field.default;\n        }\n        // attach alias\n        if (field.alias) {\n            Object.defineProperty(self, field.alias, {\n                enumerable: false,\n                configurable: true,\n                set: setter,\n                get: getter,\n            });\n        }\n    });\n    // if the constuctor is passed data\n    if (data) {\n        if (typeof data === 'string') {\n            data = Buffer.from(ethjsUtil.stripHexPrefix(data), 'hex');\n        }\n        if (Buffer.isBuffer(data)) {\n            data = rlp.decode(data);\n        }\n        if (Array.isArray(data)) {\n            if (data.length > self._fields.length) {\n                throw new Error('wrong number of fields in data');\n            }\n            // make sure all the items are buffers\n            data.forEach(function (d, i) {\n                self[self._fields[i]] = bytes_1.toBuffer(d);\n            });\n        }\n        else if (typeof data === 'object') {\n            var keys_1 = Object.keys(data);\n            fields.forEach(function (field) {\n                if (keys_1.indexOf(field.name) !== -1)\n                    self[field.name] = data[field.name];\n                if (keys_1.indexOf(field.alias) !== -1)\n                    self[field.alias] = data[field.alias];\n            });\n        }\n        else {\n            throw new Error('invalid data');\n        }\n    }\n};\n"]},"metadata":{},"sourceType":"script"}