{"ast":null,"code":"var _jsxFileName = \"/home/rashika/Documents/graphQL/client/src/component/graphs.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useLazyQuery } from '@apollo/client';\nimport { GET_GRAPH_SCHEMA } from '../graphql/query';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Graph = () => {\n  _s();\n\n  useEffect(() => {\n    getWeather();\n  }, []);\n  const [getWeather, {\n    data,\n    loading\n  }] = useLazyQuery(GET_GRAPH_SCHEMA); //    if (error) return <h1> Error found</h1>;\n\n  if (data) {\n    console.log(\"HELLO\", data);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 14\n  }, this);\n};\n\n_s(Graph, \"I1KTGSUXGKqSVTWtvKodgYPQzTo=\", false, function () {\n  return [useLazyQuery];\n});\n\n_c = Graph;\nexport default Graph;\n\nvar _c;\n\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"sources":["/home/rashika/Documents/graphQL/client/src/component/graphs.js"],"names":["React","useEffect","useLazyQuery","GET_GRAPH_SCHEMA","Graph","getWeather","data","loading","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,YAAR,QAA2B,gBAA3B;AACA,SAASC,gBAAT,QAAiC,kBAAjC;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAChBH,EAAAA,SAAS,CAAC,MAAI;AACVI,IAAAA,UAAU;AACP,GAFE,EAED,EAFC,CAAT;AAIJ,QAAM,CAACA,UAAD,EAAa;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAb,IAAkCL,YAAY,CAACC,gBAAD,CAApD,CALoB,CAOlB;;AAEI,MAAIG,IAAJ,EAAU;AACRE,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBH,IAApB;AACD;;AAIH,sBAAS;AAAA,cAEA,CAACC,OAAF,gBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,gBAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANH;AAAA;AAAA;AAAA;AAAA,UAAT;AAWH,CA1BD;;GAAMH,K;UAKkCF,Y;;;KALlCE,K;AA4BN,eAAeA,KAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport {useLazyQuery} from '@apollo/client';\nimport { GET_GRAPH_SCHEMA } from '../graphql/query';\n\nconst Graph = () => {\n    useEffect(()=>{\n        getWeather();\n          },[]) \n\nconst [getWeather, { data, loading }] = useLazyQuery(GET_GRAPH_SCHEMA);\n    \n  //    if (error) return <h1> Error found</h1>;\n    \n      if (data) {\n        console.log(\"HELLO\",data);\n      }\n\n   \n\n    return ( <div>\n        {\n            (!loading)?\n            <div>\n                Done\n                </div>:\n                <div>\n                    Loading....\n                    </div>\n        }\n    </div> );\n}\n \nexport default Graph;"]},"metadata":{},"sourceType":"module"}