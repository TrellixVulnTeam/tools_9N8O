{"ast":null,"code":"var _jsxFileName = \"/home/rashika/Documents/graphQL/client/src/component/graphs.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useLazyQuery } from '@apollo/client';\nimport { GET_DATA } from '../graphql/query';\nimport { ApolloProvider, ApolloClient, HttpLink, InMemoryCache } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Graph = () => {\n  _s();\n\n  const client = new ApolloClient({\n    cache: new InMemoryCache(),\n    uri: 'https://api.thegraph.com/subgraphs/name/upshot-tech/nft-analytics-axie-infinity'\n  });\n  useEffect(() => {\n    getWeather();\n  }, []);\n  const [getWeather, {\n    data,\n    error,\n    loading\n  }] = useLazyQuery(GET_DATA);\n  if (error) return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \" Error found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 25\n  }, this);\n\n  if (data) {\n    console.log(data);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: !loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Graph, \"y1bN1HiOXrEJ7SnGdoniBoFTp98=\", false, function () {\n  return [useLazyQuery];\n});\n\n_c = Graph;\nexport default Graph;\n\nvar _c;\n\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"sources":["/home/rashika/Documents/graphQL/client/src/component/graphs.js"],"names":["React","useEffect","useLazyQuery","GET_DATA","ApolloProvider","ApolloClient","HttpLink","InMemoryCache","Graph","client","cache","uri","getWeather","data","error","loading","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,YAAR,QAA2B,gBAA3B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAAQC,cAAR,EAAuBC,YAAvB,EAAoCC,QAApC,EAA8CC,aAA9C,QAAkE,gBAAlE;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAGlB,QAAMC,MAAM,GAAG,IAAIJ,YAAJ,CAAiB;AAC9BK,IAAAA,KAAK,EAAE,IAAIH,aAAJ,EADuB;AAE9BI,IAAAA,GAAG,EAAC;AAF0B,GAAjB,CAAf;AAKEV,EAAAA,SAAS,CAAC,MAAI;AACVW,IAAAA,UAAU;AACP,GAFE,EAED,EAFC,CAAT;AAIJ,QAAM,CAACA,UAAD,EAAa;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,GAAb,IAAyCb,YAAY,CAACC,QAAD,CAA3D;AAEM,MAAIW,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AAEX,MAAID,IAAJ,EAAU;AACRG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACD;;AAIH,sBACI,QAAC,cAAD;AAAgB,IAAA,MAAM,EAAEJ,MAAxB;AAAA,2BACI;AAAA,gBAEC,CAACM,OAAF,gBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,gBAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CApCD;;GAAMP,K;UAYyCN,Y;;;KAZzCM,K;AAsCN,eAAeA,KAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport {useLazyQuery} from '@apollo/client';\nimport { GET_DATA } from '../graphql/query';\nimport {ApolloProvider,ApolloClient,HttpLink, InMemoryCache} from '@apollo/client';\n\nconst Graph = () => {\n\n\n  const client = new ApolloClient({\n    cache: new InMemoryCache(),\n    uri:'https://api.thegraph.com/subgraphs/name/upshot-tech/nft-analytics-axie-infinity'\n    });\n\n    useEffect(()=>{\n        getWeather();\n          },[]) \n\nconst [getWeather, { data, error, loading }] = useLazyQuery(GET_DATA);\n    \n      if (error) return <h1> Error found</h1>;\n    \n      if (data) {\n        console.log(data);\n      }\n\n   \n\n    return (\n        <ApolloProvider client={client}>\n            <div>\n        {\n            (!loading)?\n            <div>\n                Done\n                </div>:\n                <div>\n                    Loading....\n                    </div>\n        }\n        </div>\n    </ApolloProvider> );\n}\n \nexport default Graph;"]},"metadata":{},"sourceType":"module"}