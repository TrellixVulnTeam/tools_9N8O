{"ast":null,"code":"import { BigNumber } from \"@ethersproject/bignumber\";\nvar NegativeOne = /*#__PURE__*/BigNumber.from(-1);\nvar Zero = /*#__PURE__*/BigNumber.from(0);\nvar One = /*#__PURE__*/BigNumber.from(1);\nvar Two = /*#__PURE__*/BigNumber.from(2);\nvar WeiPerEther = /*#__PURE__*/BigNumber.from(\"1000000000000000000\");\nvar MaxUint256 = /*#__PURE__*/BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\nvar MinInt256 = /*#__PURE__*/BigNumber.from(\"-0x8000000000000000000000000000000000000000000000000000000000000000\");\nvar MaxInt256 = /*#__PURE__*/BigNumber.from(\"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\nexport { NegativeOne, Zero, One, Two, WeiPerEther, MaxUint256, MinInt256, MaxInt256 };","map":{"version":3,"sources":["/home/cynefin/Desktop/Angular Basics/blog/node_modules/@ethersproject/constants/lib.esm/bignumbers.js"],"names":["BigNumber","NegativeOne","from","Zero","One","Two","WeiPerEther","MaxUint256","MinInt256","MaxInt256"],"mappings":"AAAA,SAASA,SAAT,QAA0B,0BAA1B;AACA,IAAMC,WAAW,GAAK,aAAaD,SAAS,CAACE,IAAV,CAAe,CAAC,CAAhB,CAAnC;AACA,IAAMC,IAAI,GAAK,aAAaH,SAAS,CAACE,IAAV,CAAe,CAAf,CAA5B;AACA,IAAME,GAAG,GAAK,aAAaJ,SAAS,CAACE,IAAV,CAAe,CAAf,CAA3B;AACA,IAAMG,GAAG,GAAK,aAAaL,SAAS,CAACE,IAAV,CAAe,CAAf,CAA3B;AACA,IAAMI,WAAW,GAAK,aAAaN,SAAS,CAACE,IAAV,CAAe,qBAAf,CAAnC;AACA,IAAMK,UAAU,GAAK,aAAaP,SAAS,CAACE,IAAV,CAAe,oEAAf,CAAlC;AACA,IAAMM,SAAS,GAAK,aAAaR,SAAS,CAACE,IAAV,CAAe,qEAAf,CAAjC;AACA,IAAMO,SAAS,GAAK,aAAaT,SAAS,CAACE,IAAV,CAAe,oEAAf,CAAjC;AACA,SAASD,WAAT,EAAsBE,IAAtB,EAA4BC,GAA5B,EAAiCC,GAAjC,EAAsCC,WAAtC,EAAmDC,UAAnD,EAA+DC,SAA/D,EAA0EC,SAA1E","sourcesContent":["import { BigNumber } from \"@ethersproject/bignumber\";\nconst NegativeOne = ( /*#__PURE__*/BigNumber.from(-1));\nconst Zero = ( /*#__PURE__*/BigNumber.from(0));\nconst One = ( /*#__PURE__*/BigNumber.from(1));\nconst Two = ( /*#__PURE__*/BigNumber.from(2));\nconst WeiPerEther = ( /*#__PURE__*/BigNumber.from(\"1000000000000000000\"));\nconst MaxUint256 = ( /*#__PURE__*/BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"));\nconst MinInt256 = ( /*#__PURE__*/BigNumber.from(\"-0x8000000000000000000000000000000000000000000000000000000000000000\"));\nconst MaxInt256 = ( /*#__PURE__*/BigNumber.from(\"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"));\nexport { NegativeOne, Zero, One, Two, WeiPerEther, MaxUint256, MinInt256, MaxInt256, };\n"]},"metadata":{},"sourceType":"module"}