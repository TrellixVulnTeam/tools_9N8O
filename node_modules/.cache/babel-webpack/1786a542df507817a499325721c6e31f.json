{"ast":null,"code":"import _asyncToGenerator from \"/home/cynefin/Desktop/Metamask login/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Component, Injectable } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport class AppComponent {\n  constructor() {\n    var _this = this;\n\n    this.accounts = [];\n    this.currentAccount = '';\n    this.chainId = '';\n    this.getAcc = /*#__PURE__*/_asyncToGenerator(function* () {\n      _this.accounts = yield window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      _this.chainId = yield window.ethereum.request({\n        method: 'eth_chainId'\n      });\n      console.log(_this.accounts);\n      _this.currentAccount = _this.accounts[0];\n    });\n    this.loadweb3();\n  }\n\n  title(title) {\n    throw new Error('Method not implemented.');\n  }\n\n  loadweb3() {\n    return _asyncToGenerator(function* () {\n      if (window.ethereum) {\n        console.log('success');\n      } else {\n        window.alert('Non-ethereum browser detected');\n      }\n    })();\n  }\n\n}\nAppComponent.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AppComponent,\n  factory: AppComponent.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["/home/cynefin/Desktop/Metamask login/src/app/app.component.ts"],"names":[],"mappings":";AAEA,SAAS,SAAT,EAAmB,UAAnB,QAAqC,eAArC;;AAUA,OAAM,MAAO,YAAP,CAAmB;AAKvB,EAAA,WAAA,GAAA;AAAA;;AAKA,SAAA,QAAA,GAA0B,EAA1B;AACA,SAAA,cAAA,GAAyB,EAAzB;AACA,SAAA,OAAA,GAAkB,EAAlB;AAUA,SAAA,MAAA,kCAAS,aAAW;AAClB,MAAA,KAAI,CAAC,QAAL,SAAsB,MAAM,CAAC,QAAP,CAAgB,OAAhB,CAAwB;AAAE,QAAA,MAAM,EAAE;AAAV,OAAxB,CAAtB;AACA,MAAA,KAAI,CAAC,OAAL,SAAqB,MAAM,CAAC,QAAP,CAAgB,OAAhB,CAAwB;AAAE,QAAA,MAAM,EAAE;AAAV,OAAxB,CAArB;AACA,MAAA,OAAO,CAAC,GAAR,CAAY,KAAI,CAAC,QAAjB;AACA,MAAA,KAAI,CAAC,cAAL,GAAsB,KAAI,CAAC,QAAL,CAAc,CAAd,CAAtB;AACD,KALD;AAhBE,SAAK,QAAL;AACD;;AAND,EAAA,KAAK,CAAC,KAAD,EAAW;AACd,UAAM,IAAI,KAAJ,CAAU,yBAAV,CAAN;AACD;;AAWK,EAAA,QAAQ,GAAA;AAAA;AACZ,UAAI,MAAM,CAAC,QAAX,EAAqB;AACnB,QAAA,OAAO,CAAC,GAAR,CAAY,SAAZ;AACD,OAFD,MAEO;AACL,QAAA,MAAM,CAAC,KAAP,CAAa,+BAAb;AACD;AALW;AAMb;;AApBsB;;SAAZ,Y;AAAY,EAAA,OAAA,EAAZ,YAAY,CAAA,I;AAAA,EAAA,UAAA,EAPX","sourcesContent":["import { analyzeAndValidateNgModules } from '@angular/compiler';\nimport { prepareEventListenerParameters } from '@angular/compiler/src/render3/view/template';\nimport { Component,Injectable } from '@angular/core';\ndeclare let window: any;\n@Injectable({\n  providedIn: 'root'\n})\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title(title: any) {\n    throw new Error('Method not implemented.');\n  }\n\n  constructor() {\n    this.loadweb3();\n  }\n\n  web3: any;\n  accounts: Array<String> = [];\n  currentAccount: String = '';\n  chainId: String = '';\n\n  async loadweb3() {\n    if (window.ethereum) {\n      console.log('success');\n    } else {\n      window.alert('Non-ethereum browser detected');\n    }\n  }\n  \n  getAcc = async () => {\n    this.accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n    this.chainId = await window.ethereum.request({ method: 'eth_chainId' });\n    console.log(this.accounts);\n    this.currentAccount = this.accounts[0];\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}