{"ast":null,"code":"\"use strict\"; // Copyright (c) 2018-2020 WalletLink.org <https://www.walletlink.org/>\n// Copyright (c) 2018-2020 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\n\nvar _asyncToGenerator = require(\"/home/cynefin/Desktop/Angular Basics/blog/node_modules/@babel/runtime/helpers/asyncToGenerator\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.filterFromParam = exports.FilterPolyfill = void 0;\n\nconst types_1 = require(\"../types\");\n\nconst util_1 = require(\"../util\");\n\nconst TIMEOUT = 5 * 60 * 1000; // 5 minutes\n\nconst JSONRPC_TEMPLATE = {\n  jsonrpc: \"2.0\",\n  id: 0\n};\n\nclass FilterPolyfill {\n  constructor(provider) {\n    this.logFilters = new Map(); // <id, filter>\n\n    this.blockFilters = new Set(); // <id>\n\n    this.pendingTransactionFilters = new Set(); // <id, true>\n\n    this.cursors = new Map(); // <id, cursor>\n\n    this.timeouts = new Map(); // <id, setTimeout id>\n\n    this.nextFilterId = types_1.IntNumber(1);\n    this.provider = provider;\n  }\n\n  newFilter(param) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const filter = filterFromParam(param);\n\n      const id = _this.makeFilterId();\n\n      const cursor = yield _this.setInitialCursorPosition(id, filter.fromBlock);\n      console.log(`Installing new log filter(${id}):`, filter, \"initial cursor position:\", cursor);\n\n      _this.logFilters.set(id, filter);\n\n      _this.setFilterTimeout(id);\n\n      return util_1.hexStringFromIntNumber(id);\n    })();\n  }\n\n  newBlockFilter() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      const id = _this2.makeFilterId();\n\n      const cursor = yield _this2.setInitialCursorPosition(id, \"latest\");\n      console.log(`Installing new block filter (${id}) with initial cursor position:`, cursor);\n\n      _this2.blockFilters.add(id);\n\n      _this2.setFilterTimeout(id);\n\n      return util_1.hexStringFromIntNumber(id);\n    })();\n  }\n\n  newPendingTransactionFilter() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      const id = _this3.makeFilterId();\n\n      const cursor = yield _this3.setInitialCursorPosition(id, \"latest\");\n      console.log(`Installing new block filter (${id}) with initial cursor position:`, cursor);\n\n      _this3.pendingTransactionFilters.add(id);\n\n      _this3.setFilterTimeout(id);\n\n      return util_1.hexStringFromIntNumber(id);\n    })();\n  }\n\n  uninstallFilter(filterId) {\n    const id = util_1.intNumberFromHexString(filterId);\n    console.log(`Uninstalling filter (${id})`);\n    this.deleteFilter(id);\n    return true;\n  }\n\n  getFilterChanges(filterId) {\n    const id = util_1.intNumberFromHexString(filterId);\n\n    if (this.timeouts.has(id)) {\n      // extend timeout\n      this.setFilterTimeout(id);\n    }\n\n    if (this.logFilters.has(id)) {\n      return this.getLogFilterChanges(id);\n    } else if (this.blockFilters.has(id)) {\n      return this.getBlockFilterChanges(id);\n    } else if (this.pendingTransactionFilters.has(id)) {\n      return this.getPendingTransactionFilterChanges(id);\n    }\n\n    return Promise.resolve(filterNotFoundError());\n  }\n\n  getFilterLogs(filterId) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      const id = util_1.intNumberFromHexString(filterId);\n\n      const filter = _this4.logFilters.get(id);\n\n      if (!filter) {\n        return filterNotFoundError();\n      }\n\n      return _this4.sendAsyncPromise(Object.assign(Object.assign({}, JSONRPC_TEMPLATE), {\n        method: \"eth_getLogs\",\n        params: [paramFromFilter(filter)]\n      }));\n    })();\n  }\n\n  makeFilterId() {\n    return types_1.IntNumber(++this.nextFilterId);\n  }\n\n  sendAsyncPromise(request) {\n    return new Promise((resolve, reject) => {\n      this.provider.sendAsync(request, (err, response) => {\n        if (err) {\n          return reject(err);\n        }\n\n        if (Array.isArray(response) || response == null) {\n          return reject(new Error(`unexpected response received: ${JSON.stringify(response)}`));\n        }\n\n        resolve(response);\n      });\n    });\n  }\n\n  deleteFilter(id) {\n    console.log(`Deleting filter (${id})`);\n    this.logFilters.delete(id);\n    this.blockFilters.delete(id);\n    this.pendingTransactionFilters.delete(id);\n    this.cursors.delete(id);\n    this.timeouts.delete(id);\n  }\n\n  getLogFilterChanges(id) {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      const filter = _this5.logFilters.get(id);\n\n      const cursorPosition = _this5.cursors.get(id);\n\n      if (!cursorPosition || !filter) {\n        return filterNotFoundError();\n      }\n\n      const currentBlockHeight = yield _this5.getCurrentBlockHeight();\n      const toBlock = filter.toBlock === \"latest\" ? currentBlockHeight : filter.toBlock;\n\n      if (cursorPosition > currentBlockHeight) {\n        return emptyResult();\n      }\n\n      if (cursorPosition > filter.toBlock) {\n        return emptyResult();\n      }\n\n      console.log(`Fetching logs from ${cursorPosition} to ${toBlock} for filter ${id}`);\n      const response = yield _this5.sendAsyncPromise(Object.assign(Object.assign({}, JSONRPC_TEMPLATE), {\n        method: \"eth_getLogs\",\n        params: [paramFromFilter(Object.assign(Object.assign({}, filter), {\n          fromBlock: cursorPosition,\n          toBlock\n        }))]\n      }));\n\n      if (Array.isArray(response.result)) {\n        const blocks = response.result.map(log => util_1.intNumberFromHexString(log.blockNumber || \"0x0\"));\n        const highestBlock = Math.max(...blocks);\n\n        if (highestBlock && highestBlock > cursorPosition) {\n          const newCursorPosition = types_1.IntNumber(highestBlock + 1);\n          console.log(`Moving cursor position for filter (${id}) from ${cursorPosition} to ${newCursorPosition}`);\n\n          _this5.cursors.set(id, newCursorPosition);\n        }\n      }\n\n      return response;\n    })();\n  }\n\n  getBlockFilterChanges(id) {\n    var _this6 = this;\n\n    return _asyncToGenerator(function* () {\n      const cursorPosition = _this6.cursors.get(id);\n\n      if (!cursorPosition) {\n        return filterNotFoundError();\n      }\n\n      const currentBlockHeight = yield _this6.getCurrentBlockHeight();\n\n      if (cursorPosition > currentBlockHeight) {\n        return emptyResult();\n      }\n\n      console.log(`Fetching blocks from ${cursorPosition} to ${currentBlockHeight} for filter (${id})`);\n      const blocks = (yield Promise.all(util_1.range(cursorPosition, currentBlockHeight + 1).map(i => _this6.getBlockHashByNumber(types_1.IntNumber(i))))).filter(hash => !!hash);\n      const newCursorPosition = types_1.IntNumber(cursorPosition + blocks.length);\n      console.log(`Moving cursor position for filter (${id}) from ${cursorPosition} to ${newCursorPosition}`);\n\n      _this6.cursors.set(id, newCursorPosition);\n\n      return Object.assign(Object.assign({}, JSONRPC_TEMPLATE), {\n        result: blocks\n      });\n    })();\n  }\n\n  getPendingTransactionFilterChanges(_id) {\n    return _asyncToGenerator(function* () {\n      // pending transaction filters are not supported\n      return Promise.resolve(emptyResult());\n    })();\n  }\n\n  setInitialCursorPosition(id, startBlock) {\n    var _this7 = this;\n\n    return _asyncToGenerator(function* () {\n      const currentBlockHeight = yield _this7.getCurrentBlockHeight();\n      const initialCursorPosition = typeof startBlock === \"number\" && startBlock > currentBlockHeight ? startBlock : currentBlockHeight;\n\n      _this7.cursors.set(id, initialCursorPosition);\n\n      return initialCursorPosition;\n    })();\n  }\n\n  setFilterTimeout(id) {\n    const existing = this.timeouts.get(id);\n\n    if (existing) {\n      window.clearTimeout(existing);\n    }\n\n    const timeout = window.setTimeout(() => {\n      console.log(`Filter (${id}) timed out`);\n      this.deleteFilter(id);\n    }, TIMEOUT);\n    this.timeouts.set(id, timeout);\n  }\n\n  getCurrentBlockHeight() {\n    var _this8 = this;\n\n    return _asyncToGenerator(function* () {\n      const {\n        result\n      } = yield _this8.sendAsyncPromise(Object.assign(Object.assign({}, JSONRPC_TEMPLATE), {\n        method: \"eth_blockNumber\",\n        params: []\n      }));\n      return util_1.intNumberFromHexString(util_1.ensureHexString(result));\n    })();\n  }\n\n  getBlockHashByNumber(blockNumber) {\n    var _this9 = this;\n\n    return _asyncToGenerator(function* () {\n      const response = yield _this9.sendAsyncPromise(Object.assign(Object.assign({}, JSONRPC_TEMPLATE), {\n        method: \"eth_getBlockByNumber\",\n        params: [util_1.hexStringFromIntNumber(blockNumber), false]\n      }));\n\n      if (response.result && typeof response.result.hash === \"string\") {\n        return util_1.ensureHexString(response.result.hash);\n      }\n\n      return null;\n    })();\n  }\n\n}\n\nexports.FilterPolyfill = FilterPolyfill;\n\nfunction filterFromParam(param) {\n  return {\n    fromBlock: intBlockHeightFromHexBlockHeight(param.fromBlock),\n    toBlock: intBlockHeightFromHexBlockHeight(param.toBlock),\n    addresses: param.address === undefined ? null : Array.isArray(param.address) ? param.address : [param.address],\n    topics: param.topics || []\n  };\n}\n\nexports.filterFromParam = filterFromParam;\n\nfunction paramFromFilter(filter) {\n  const param = {\n    fromBlock: hexBlockHeightFromIntBlockHeight(filter.fromBlock),\n    toBlock: hexBlockHeightFromIntBlockHeight(filter.toBlock),\n    topics: filter.topics\n  };\n\n  if (filter.addresses !== null) {\n    param.address = filter.addresses;\n  }\n\n  return param;\n}\n\nfunction intBlockHeightFromHexBlockHeight(value) {\n  if (value === undefined || value === \"latest\" || value === \"pending\") {\n    return \"latest\";\n  } else if (value === \"earliest\") {\n    return types_1.IntNumber(0);\n  } else if (util_1.isHexString(value)) {\n    return util_1.intNumberFromHexString(value);\n  }\n\n  throw new Error(`Invalid block option: ${value}`);\n}\n\nfunction hexBlockHeightFromIntBlockHeight(value) {\n  if (value === \"latest\") {\n    return value;\n  }\n\n  return util_1.hexStringFromIntNumber(value);\n}\n\nfunction filterNotFoundError() {\n  return Object.assign(Object.assign({}, JSONRPC_TEMPLATE), {\n    error: {\n      code: -32000,\n      message: \"filter not found\"\n    }\n  });\n}\n\nfunction emptyResult() {\n  return Object.assign(Object.assign({}, JSONRPC_TEMPLATE), {\n    result: []\n  });\n}","map":{"version":3,"sources":["/home/cynefin/Desktop/Angular Basics/blog/node_modules/walletlink/dist/provider/FilterPolyfill.js"],"names":["Object","defineProperty","exports","value","filterFromParam","FilterPolyfill","types_1","require","util_1","TIMEOUT","JSONRPC_TEMPLATE","jsonrpc","id","constructor","provider","logFilters","Map","blockFilters","Set","pendingTransactionFilters","cursors","timeouts","nextFilterId","IntNumber","newFilter","param","filter","makeFilterId","cursor","setInitialCursorPosition","fromBlock","console","log","set","setFilterTimeout","hexStringFromIntNumber","newBlockFilter","add","newPendingTransactionFilter","uninstallFilter","filterId","intNumberFromHexString","deleteFilter","getFilterChanges","has","getLogFilterChanges","getBlockFilterChanges","getPendingTransactionFilterChanges","Promise","resolve","filterNotFoundError","getFilterLogs","get","sendAsyncPromise","assign","method","params","paramFromFilter","request","reject","sendAsync","err","response","Array","isArray","Error","JSON","stringify","delete","cursorPosition","currentBlockHeight","getCurrentBlockHeight","toBlock","emptyResult","result","blocks","map","blockNumber","highestBlock","Math","max","newCursorPosition","all","range","i","getBlockHashByNumber","hash","length","_id","startBlock","initialCursorPosition","existing","window","clearTimeout","timeout","setTimeout","ensureHexString","intBlockHeightFromHexBlockHeight","addresses","address","undefined","topics","hexBlockHeightFromIntBlockHeight","isHexString","error","code","message"],"mappings":"AAAA,a,CACA;AACA;AACA;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,eAAR,GAA0BF,OAAO,CAACG,cAAR,GAAyB,KAAK,CAAxD;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,UAAD,CAAvB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,SAAD,CAAtB;;AACA,MAAME,OAAO,GAAG,IAAI,EAAJ,GAAS,IAAzB,C,CAA+B;;AAC/B,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,OAAO,EAAE,KADY;AAErBC,EAAAA,EAAE,EAAE;AAFiB,CAAzB;;AAIA,MAAMP,cAAN,CAAqB;AACjBQ,EAAAA,WAAW,CAACC,QAAD,EAAW;AAClB,SAAKC,UAAL,GAAkB,IAAIC,GAAJ,EAAlB,CADkB,CACW;;AAC7B,SAAKC,YAAL,GAAoB,IAAIC,GAAJ,EAApB,CAFkB,CAEa;;AAC/B,SAAKC,yBAAL,GAAiC,IAAID,GAAJ,EAAjC,CAHkB,CAG0B;;AAC5C,SAAKE,OAAL,GAAe,IAAIJ,GAAJ,EAAf,CAJkB,CAIQ;;AAC1B,SAAKK,QAAL,GAAgB,IAAIL,GAAJ,EAAhB,CALkB,CAKS;;AAC3B,SAAKM,YAAL,GAAoBhB,OAAO,CAACiB,SAAR,CAAkB,CAAlB,CAApB;AACA,SAAKT,QAAL,GAAgBA,QAAhB;AACH;;AACKU,EAAAA,SAAS,CAACC,KAAD,EAAQ;AAAA;;AAAA;AACnB,YAAMC,MAAM,GAAGtB,eAAe,CAACqB,KAAD,CAA9B;;AACA,YAAMb,EAAE,GAAG,KAAI,CAACe,YAAL,EAAX;;AACA,YAAMC,MAAM,SAAS,KAAI,CAACC,wBAAL,CAA8BjB,EAA9B,EAAkCc,MAAM,CAACI,SAAzC,CAArB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAa,6BAA4BpB,EAAG,IAA5C,EAAiDc,MAAjD,EAAyD,0BAAzD,EAAqFE,MAArF;;AACA,MAAA,KAAI,CAACb,UAAL,CAAgBkB,GAAhB,CAAoBrB,EAApB,EAAwBc,MAAxB;;AACA,MAAA,KAAI,CAACQ,gBAAL,CAAsBtB,EAAtB;;AACA,aAAOJ,MAAM,CAAC2B,sBAAP,CAA8BvB,EAA9B,CAAP;AAPmB;AAQtB;;AACKwB,EAAAA,cAAc,GAAG;AAAA;;AAAA;AACnB,YAAMxB,EAAE,GAAG,MAAI,CAACe,YAAL,EAAX;;AACA,YAAMC,MAAM,SAAS,MAAI,CAACC,wBAAL,CAA8BjB,EAA9B,EAAkC,QAAlC,CAArB;AACAmB,MAAAA,OAAO,CAACC,GAAR,CAAa,gCAA+BpB,EAAG,iCAA/C,EAAiFgB,MAAjF;;AACA,MAAA,MAAI,CAACX,YAAL,CAAkBoB,GAAlB,CAAsBzB,EAAtB;;AACA,MAAA,MAAI,CAACsB,gBAAL,CAAsBtB,EAAtB;;AACA,aAAOJ,MAAM,CAAC2B,sBAAP,CAA8BvB,EAA9B,CAAP;AANmB;AAOtB;;AACK0B,EAAAA,2BAA2B,GAAG;AAAA;;AAAA;AAChC,YAAM1B,EAAE,GAAG,MAAI,CAACe,YAAL,EAAX;;AACA,YAAMC,MAAM,SAAS,MAAI,CAACC,wBAAL,CAA8BjB,EAA9B,EAAkC,QAAlC,CAArB;AACAmB,MAAAA,OAAO,CAACC,GAAR,CAAa,gCAA+BpB,EAAG,iCAA/C,EAAiFgB,MAAjF;;AACA,MAAA,MAAI,CAACT,yBAAL,CAA+BkB,GAA/B,CAAmCzB,EAAnC;;AACA,MAAA,MAAI,CAACsB,gBAAL,CAAsBtB,EAAtB;;AACA,aAAOJ,MAAM,CAAC2B,sBAAP,CAA8BvB,EAA9B,CAAP;AANgC;AAOnC;;AACD2B,EAAAA,eAAe,CAACC,QAAD,EAAW;AACtB,UAAM5B,EAAE,GAAGJ,MAAM,CAACiC,sBAAP,CAA8BD,QAA9B,CAAX;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAa,wBAAuBpB,EAAG,GAAvC;AACA,SAAK8B,YAAL,CAAkB9B,EAAlB;AACA,WAAO,IAAP;AACH;;AACD+B,EAAAA,gBAAgB,CAACH,QAAD,EAAW;AACvB,UAAM5B,EAAE,GAAGJ,MAAM,CAACiC,sBAAP,CAA8BD,QAA9B,CAAX;;AACA,QAAI,KAAKnB,QAAL,CAAcuB,GAAd,CAAkBhC,EAAlB,CAAJ,EAA2B;AACvB;AACA,WAAKsB,gBAAL,CAAsBtB,EAAtB;AACH;;AACD,QAAI,KAAKG,UAAL,CAAgB6B,GAAhB,CAAoBhC,EAApB,CAAJ,EAA6B;AACzB,aAAO,KAAKiC,mBAAL,CAAyBjC,EAAzB,CAAP;AACH,KAFD,MAGK,IAAI,KAAKK,YAAL,CAAkB2B,GAAlB,CAAsBhC,EAAtB,CAAJ,EAA+B;AAChC,aAAO,KAAKkC,qBAAL,CAA2BlC,EAA3B,CAAP;AACH,KAFI,MAGA,IAAI,KAAKO,yBAAL,CAA+ByB,GAA/B,CAAmChC,EAAnC,CAAJ,EAA4C;AAC7C,aAAO,KAAKmC,kCAAL,CAAwCnC,EAAxC,CAAP;AACH;;AACD,WAAOoC,OAAO,CAACC,OAAR,CAAgBC,mBAAmB,EAAnC,CAAP;AACH;;AACKC,EAAAA,aAAa,CAACX,QAAD,EAAW;AAAA;;AAAA;AAC1B,YAAM5B,EAAE,GAAGJ,MAAM,CAACiC,sBAAP,CAA8BD,QAA9B,CAAX;;AACA,YAAMd,MAAM,GAAG,MAAI,CAACX,UAAL,CAAgBqC,GAAhB,CAAoBxC,EAApB,CAAf;;AACA,UAAI,CAACc,MAAL,EAAa;AACT,eAAOwB,mBAAmB,EAA1B;AACH;;AACD,aAAO,MAAI,CAACG,gBAAL,CAAsBrD,MAAM,CAACsD,MAAP,CAActD,MAAM,CAACsD,MAAP,CAAc,EAAd,EAAkB5C,gBAAlB,CAAd,EAAmD;AAAE6C,QAAAA,MAAM,EAAE,aAAV;AAAyBC,QAAAA,MAAM,EAAE,CAACC,eAAe,CAAC/B,MAAD,CAAhB;AAAjC,OAAnD,CAAtB,CAAP;AAN0B;AAO7B;;AACDC,EAAAA,YAAY,GAAG;AACX,WAAOrB,OAAO,CAACiB,SAAR,CAAkB,EAAE,KAAKD,YAAzB,CAAP;AACH;;AACD+B,EAAAA,gBAAgB,CAACK,OAAD,EAAU;AACtB,WAAO,IAAIV,OAAJ,CAAY,CAACC,OAAD,EAAUU,MAAV,KAAqB;AACpC,WAAK7C,QAAL,CAAc8C,SAAd,CAAwBF,OAAxB,EAAiC,CAACG,GAAD,EAAMC,QAAN,KAAmB;AAChD,YAAID,GAAJ,EAAS;AACL,iBAAOF,MAAM,CAACE,GAAD,CAAb;AACH;;AACD,YAAIE,KAAK,CAACC,OAAN,CAAcF,QAAd,KAA2BA,QAAQ,IAAI,IAA3C,EAAiD;AAC7C,iBAAOH,MAAM,CAAC,IAAIM,KAAJ,CAAW,iCAAgCC,IAAI,CAACC,SAAL,CAAeL,QAAf,CAAyB,EAApE,CAAD,CAAb;AACH;;AACDb,QAAAA,OAAO,CAACa,QAAD,CAAP;AACH,OARD;AASH,KAVM,CAAP;AAWH;;AACDpB,EAAAA,YAAY,CAAC9B,EAAD,EAAK;AACbmB,IAAAA,OAAO,CAACC,GAAR,CAAa,oBAAmBpB,EAAG,GAAnC;AACA,SAAKG,UAAL,CAAgBqD,MAAhB,CAAuBxD,EAAvB;AACA,SAAKK,YAAL,CAAkBmD,MAAlB,CAAyBxD,EAAzB;AACA,SAAKO,yBAAL,CAA+BiD,MAA/B,CAAsCxD,EAAtC;AACA,SAAKQ,OAAL,CAAagD,MAAb,CAAoBxD,EAApB;AACA,SAAKS,QAAL,CAAc+C,MAAd,CAAqBxD,EAArB;AACH;;AACKiC,EAAAA,mBAAmB,CAACjC,EAAD,EAAK;AAAA;;AAAA;AAC1B,YAAMc,MAAM,GAAG,MAAI,CAACX,UAAL,CAAgBqC,GAAhB,CAAoBxC,EAApB,CAAf;;AACA,YAAMyD,cAAc,GAAG,MAAI,CAACjD,OAAL,CAAagC,GAAb,CAAiBxC,EAAjB,CAAvB;;AACA,UAAI,CAACyD,cAAD,IAAmB,CAAC3C,MAAxB,EAAgC;AAC5B,eAAOwB,mBAAmB,EAA1B;AACH;;AACD,YAAMoB,kBAAkB,SAAS,MAAI,CAACC,qBAAL,EAAjC;AACA,YAAMC,OAAO,GAAG9C,MAAM,CAAC8C,OAAP,KAAmB,QAAnB,GAA8BF,kBAA9B,GAAmD5C,MAAM,CAAC8C,OAA1E;;AACA,UAAIH,cAAc,GAAGC,kBAArB,EAAyC;AACrC,eAAOG,WAAW,EAAlB;AACH;;AACD,UAAIJ,cAAc,GAAG3C,MAAM,CAAC8C,OAA5B,EAAqC;AACjC,eAAOC,WAAW,EAAlB;AACH;;AACD1C,MAAAA,OAAO,CAACC,GAAR,CAAa,sBAAqBqC,cAAe,OAAMG,OAAQ,eAAc5D,EAAG,EAAhF;AACA,YAAMkD,QAAQ,SAAS,MAAI,CAACT,gBAAL,CAAsBrD,MAAM,CAACsD,MAAP,CAActD,MAAM,CAACsD,MAAP,CAAc,EAAd,EAAkB5C,gBAAlB,CAAd,EAAmD;AAAE6C,QAAAA,MAAM,EAAE,aAAV;AAAyBC,QAAAA,MAAM,EAAE,CACzHC,eAAe,CAACzD,MAAM,CAACsD,MAAP,CAActD,MAAM,CAACsD,MAAP,CAAc,EAAd,EAAkB5B,MAAlB,CAAd,EAAyC;AAAEI,UAAAA,SAAS,EAAEuC,cAAb;AAA6BG,UAAAA;AAA7B,SAAzC,CAAD,CAD0G;AAAjC,OAAnD,CAAtB,CAAvB;;AAGA,UAAIT,KAAK,CAACC,OAAN,CAAcF,QAAQ,CAACY,MAAvB,CAAJ,EAAoC;AAChC,cAAMC,MAAM,GAAGb,QAAQ,CAACY,MAAT,CAAgBE,GAAhB,CAAoB5C,GAAG,IAAIxB,MAAM,CAACiC,sBAAP,CAA8BT,GAAG,CAAC6C,WAAJ,IAAmB,KAAjD,CAA3B,CAAf;AACA,cAAMC,YAAY,GAAGC,IAAI,CAACC,GAAL,CAAS,GAAGL,MAAZ,CAArB;;AACA,YAAIG,YAAY,IAAIA,YAAY,GAAGT,cAAnC,EAAmD;AAC/C,gBAAMY,iBAAiB,GAAG3E,OAAO,CAACiB,SAAR,CAAkBuD,YAAY,GAAG,CAAjC,CAA1B;AACA/C,UAAAA,OAAO,CAACC,GAAR,CAAa,sCAAqCpB,EAAG,UAASyD,cAAe,OAAMY,iBAAkB,EAArG;;AACA,UAAA,MAAI,CAAC7D,OAAL,CAAaa,GAAb,CAAiBrB,EAAjB,EAAqBqE,iBAArB;AACH;AACJ;;AACD,aAAOnB,QAAP;AA3B0B;AA4B7B;;AACKhB,EAAAA,qBAAqB,CAAClC,EAAD,EAAK;AAAA;;AAAA;AAC5B,YAAMyD,cAAc,GAAG,MAAI,CAACjD,OAAL,CAAagC,GAAb,CAAiBxC,EAAjB,CAAvB;;AACA,UAAI,CAACyD,cAAL,EAAqB;AACjB,eAAOnB,mBAAmB,EAA1B;AACH;;AACD,YAAMoB,kBAAkB,SAAS,MAAI,CAACC,qBAAL,EAAjC;;AACA,UAAIF,cAAc,GAAGC,kBAArB,EAAyC;AACrC,eAAOG,WAAW,EAAlB;AACH;;AACD1C,MAAAA,OAAO,CAACC,GAAR,CAAa,wBAAuBqC,cAAe,OAAMC,kBAAmB,gBAAe1D,EAAG,GAA9F;AACA,YAAM+D,MAAM,GAAG,OAAO3B,OAAO,CAACkC,GAAR,CAAY1E,MAAM,CAAC2E,KAAP,CAAad,cAAb,EAA6BC,kBAAkB,GAAG,CAAlD,EAAqDM,GAArD,CAAyDQ,CAAC,IAAI,MAAI,CAACC,oBAAL,CAA0B/E,OAAO,CAACiB,SAAR,CAAkB6D,CAAlB,CAA1B,CAA9D,CAAZ,CAAP,EAAoI1D,MAApI,CAA2I4D,IAAI,IAAI,CAAC,CAACA,IAArJ,CAAf;AACA,YAAML,iBAAiB,GAAG3E,OAAO,CAACiB,SAAR,CAAkB8C,cAAc,GAAGM,MAAM,CAACY,MAA1C,CAA1B;AACAxD,MAAAA,OAAO,CAACC,GAAR,CAAa,sCAAqCpB,EAAG,UAASyD,cAAe,OAAMY,iBAAkB,EAArG;;AACA,MAAA,MAAI,CAAC7D,OAAL,CAAaa,GAAb,CAAiBrB,EAAjB,EAAqBqE,iBAArB;;AACA,aAAOjF,MAAM,CAACsD,MAAP,CAActD,MAAM,CAACsD,MAAP,CAAc,EAAd,EAAkB5C,gBAAlB,CAAd,EAAmD;AAAEgE,QAAAA,MAAM,EAAEC;AAAV,OAAnD,CAAP;AAd4B;AAe/B;;AACK5B,EAAAA,kCAAkC,CAACyC,GAAD,EAAM;AAAA;AAC1C;AACA,aAAOxC,OAAO,CAACC,OAAR,CAAgBwB,WAAW,EAA3B,CAAP;AAF0C;AAG7C;;AACK5C,EAAAA,wBAAwB,CAACjB,EAAD,EAAK6E,UAAL,EAAiB;AAAA;;AAAA;AAC3C,YAAMnB,kBAAkB,SAAS,MAAI,CAACC,qBAAL,EAAjC;AACA,YAAMmB,qBAAqB,GAAG,OAAOD,UAAP,KAAsB,QAAtB,IAAkCA,UAAU,GAAGnB,kBAA/C,GACxBmB,UADwB,GAExBnB,kBAFN;;AAGA,MAAA,MAAI,CAAClD,OAAL,CAAaa,GAAb,CAAiBrB,EAAjB,EAAqB8E,qBAArB;;AACA,aAAOA,qBAAP;AAN2C;AAO9C;;AACDxD,EAAAA,gBAAgB,CAACtB,EAAD,EAAK;AACjB,UAAM+E,QAAQ,GAAG,KAAKtE,QAAL,CAAc+B,GAAd,CAAkBxC,EAAlB,CAAjB;;AACA,QAAI+E,QAAJ,EAAc;AACVC,MAAAA,MAAM,CAACC,YAAP,CAAoBF,QAApB;AACH;;AACD,UAAMG,OAAO,GAAGF,MAAM,CAACG,UAAP,CAAkB,MAAM;AACpChE,MAAAA,OAAO,CAACC,GAAR,CAAa,WAAUpB,EAAG,aAA1B;AACA,WAAK8B,YAAL,CAAkB9B,EAAlB;AACH,KAHe,EAGbH,OAHa,CAAhB;AAIA,SAAKY,QAAL,CAAcY,GAAd,CAAkBrB,EAAlB,EAAsBkF,OAAtB;AACH;;AACKvB,EAAAA,qBAAqB,GAAG;AAAA;;AAAA;AAC1B,YAAM;AAAEG,QAAAA;AAAF,gBAAmB,MAAI,CAACrB,gBAAL,CAAsBrD,MAAM,CAACsD,MAAP,CAActD,MAAM,CAACsD,MAAP,CAAc,EAAd,EAAkB5C,gBAAlB,CAAd,EAAmD;AAAE6C,QAAAA,MAAM,EAAE,iBAAV;AAA6BC,QAAAA,MAAM,EAAE;AAArC,OAAnD,CAAtB,CAAzB;AACA,aAAOhD,MAAM,CAACiC,sBAAP,CAA8BjC,MAAM,CAACwF,eAAP,CAAuBtB,MAAvB,CAA9B,CAAP;AAF0B;AAG7B;;AACKW,EAAAA,oBAAoB,CAACR,WAAD,EAAc;AAAA;;AAAA;AACpC,YAAMf,QAAQ,SAAS,MAAI,CAACT,gBAAL,CAAsBrD,MAAM,CAACsD,MAAP,CAActD,MAAM,CAACsD,MAAP,CAAc,EAAd,EAAkB5C,gBAAlB,CAAd,EAAmD;AAAE6C,QAAAA,MAAM,EAAE,sBAAV;AAAkCC,QAAAA,MAAM,EAAE,CAAChD,MAAM,CAAC2B,sBAAP,CAA8B0C,WAA9B,CAAD,EAA6C,KAA7C;AAA1C,OAAnD,CAAtB,CAAvB;;AACA,UAAIf,QAAQ,CAACY,MAAT,IAAmB,OAAOZ,QAAQ,CAACY,MAAT,CAAgBY,IAAvB,KAAgC,QAAvD,EAAiE;AAC7D,eAAO9E,MAAM,CAACwF,eAAP,CAAuBlC,QAAQ,CAACY,MAAT,CAAgBY,IAAvC,CAAP;AACH;;AACD,aAAO,IAAP;AALoC;AAMvC;;AAxKgB;;AA0KrBpF,OAAO,CAACG,cAAR,GAAyBA,cAAzB;;AACA,SAASD,eAAT,CAAyBqB,KAAzB,EAAgC;AAC5B,SAAO;AACHK,IAAAA,SAAS,EAAEmE,gCAAgC,CAACxE,KAAK,CAACK,SAAP,CADxC;AAEH0C,IAAAA,OAAO,EAAEyB,gCAAgC,CAACxE,KAAK,CAAC+C,OAAP,CAFtC;AAGH0B,IAAAA,SAAS,EAAEzE,KAAK,CAAC0E,OAAN,KAAkBC,SAAlB,GACL,IADK,GAELrC,KAAK,CAACC,OAAN,CAAcvC,KAAK,CAAC0E,OAApB,IACI1E,KAAK,CAAC0E,OADV,GAEI,CAAC1E,KAAK,CAAC0E,OAAP,CAPP;AAQHE,IAAAA,MAAM,EAAE5E,KAAK,CAAC4E,MAAN,IAAgB;AARrB,GAAP;AAUH;;AACDnG,OAAO,CAACE,eAAR,GAA0BA,eAA1B;;AACA,SAASqD,eAAT,CAAyB/B,MAAzB,EAAiC;AAC7B,QAAMD,KAAK,GAAG;AACVK,IAAAA,SAAS,EAAEwE,gCAAgC,CAAC5E,MAAM,CAACI,SAAR,CADjC;AAEV0C,IAAAA,OAAO,EAAE8B,gCAAgC,CAAC5E,MAAM,CAAC8C,OAAR,CAF/B;AAGV6B,IAAAA,MAAM,EAAE3E,MAAM,CAAC2E;AAHL,GAAd;;AAKA,MAAI3E,MAAM,CAACwE,SAAP,KAAqB,IAAzB,EAA+B;AAC3BzE,IAAAA,KAAK,CAAC0E,OAAN,GAAgBzE,MAAM,CAACwE,SAAvB;AACH;;AACD,SAAOzE,KAAP;AACH;;AACD,SAASwE,gCAAT,CAA0C9F,KAA1C,EAAiD;AAC7C,MAAIA,KAAK,KAAKiG,SAAV,IAAuBjG,KAAK,KAAK,QAAjC,IAA6CA,KAAK,KAAK,SAA3D,EAAsE;AAClE,WAAO,QAAP;AACH,GAFD,MAGK,IAAIA,KAAK,KAAK,UAAd,EAA0B;AAC3B,WAAOG,OAAO,CAACiB,SAAR,CAAkB,CAAlB,CAAP;AACH,GAFI,MAGA,IAAIf,MAAM,CAAC+F,WAAP,CAAmBpG,KAAnB,CAAJ,EAA+B;AAChC,WAAOK,MAAM,CAACiC,sBAAP,CAA8BtC,KAA9B,CAAP;AACH;;AACD,QAAM,IAAI8D,KAAJ,CAAW,yBAAwB9D,KAAM,EAAzC,CAAN;AACH;;AACD,SAASmG,gCAAT,CAA0CnG,KAA1C,EAAiD;AAC7C,MAAIA,KAAK,KAAK,QAAd,EAAwB;AACpB,WAAOA,KAAP;AACH;;AACD,SAAOK,MAAM,CAAC2B,sBAAP,CAA8BhC,KAA9B,CAAP;AACH;;AACD,SAAS+C,mBAAT,GAA+B;AAC3B,SAAOlD,MAAM,CAACsD,MAAP,CAActD,MAAM,CAACsD,MAAP,CAAc,EAAd,EAAkB5C,gBAAlB,CAAd,EAAmD;AAAE8F,IAAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE,CAAC,KAAT;AAAgBC,MAAAA,OAAO,EAAE;AAAzB;AAAT,GAAnD,CAAP;AACH;;AACD,SAASjC,WAAT,GAAuB;AACnB,SAAOzE,MAAM,CAACsD,MAAP,CAActD,MAAM,CAACsD,MAAP,CAAc,EAAd,EAAkB5C,gBAAlB,CAAd,EAAmD;AAAEgE,IAAAA,MAAM,EAAE;AAAV,GAAnD,CAAP;AACH","sourcesContent":["\"use strict\";\n// Copyright (c) 2018-2020 WalletLink.org <https://www.walletlink.org/>\n// Copyright (c) 2018-2020 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.filterFromParam = exports.FilterPolyfill = void 0;\nconst types_1 = require(\"../types\");\nconst util_1 = require(\"../util\");\nconst TIMEOUT = 5 * 60 * 1000; // 5 minutes\nconst JSONRPC_TEMPLATE = {\n    jsonrpc: \"2.0\",\n    id: 0\n};\nclass FilterPolyfill {\n    constructor(provider) {\n        this.logFilters = new Map(); // <id, filter>\n        this.blockFilters = new Set(); // <id>\n        this.pendingTransactionFilters = new Set(); // <id, true>\n        this.cursors = new Map(); // <id, cursor>\n        this.timeouts = new Map(); // <id, setTimeout id>\n        this.nextFilterId = types_1.IntNumber(1);\n        this.provider = provider;\n    }\n    async newFilter(param) {\n        const filter = filterFromParam(param);\n        const id = this.makeFilterId();\n        const cursor = await this.setInitialCursorPosition(id, filter.fromBlock);\n        console.log(`Installing new log filter(${id}):`, filter, \"initial cursor position:\", cursor);\n        this.logFilters.set(id, filter);\n        this.setFilterTimeout(id);\n        return util_1.hexStringFromIntNumber(id);\n    }\n    async newBlockFilter() {\n        const id = this.makeFilterId();\n        const cursor = await this.setInitialCursorPosition(id, \"latest\");\n        console.log(`Installing new block filter (${id}) with initial cursor position:`, cursor);\n        this.blockFilters.add(id);\n        this.setFilterTimeout(id);\n        return util_1.hexStringFromIntNumber(id);\n    }\n    async newPendingTransactionFilter() {\n        const id = this.makeFilterId();\n        const cursor = await this.setInitialCursorPosition(id, \"latest\");\n        console.log(`Installing new block filter (${id}) with initial cursor position:`, cursor);\n        this.pendingTransactionFilters.add(id);\n        this.setFilterTimeout(id);\n        return util_1.hexStringFromIntNumber(id);\n    }\n    uninstallFilter(filterId) {\n        const id = util_1.intNumberFromHexString(filterId);\n        console.log(`Uninstalling filter (${id})`);\n        this.deleteFilter(id);\n        return true;\n    }\n    getFilterChanges(filterId) {\n        const id = util_1.intNumberFromHexString(filterId);\n        if (this.timeouts.has(id)) {\n            // extend timeout\n            this.setFilterTimeout(id);\n        }\n        if (this.logFilters.has(id)) {\n            return this.getLogFilterChanges(id);\n        }\n        else if (this.blockFilters.has(id)) {\n            return this.getBlockFilterChanges(id);\n        }\n        else if (this.pendingTransactionFilters.has(id)) {\n            return this.getPendingTransactionFilterChanges(id);\n        }\n        return Promise.resolve(filterNotFoundError());\n    }\n    async getFilterLogs(filterId) {\n        const id = util_1.intNumberFromHexString(filterId);\n        const filter = this.logFilters.get(id);\n        if (!filter) {\n            return filterNotFoundError();\n        }\n        return this.sendAsyncPromise(Object.assign(Object.assign({}, JSONRPC_TEMPLATE), { method: \"eth_getLogs\", params: [paramFromFilter(filter)] }));\n    }\n    makeFilterId() {\n        return types_1.IntNumber(++this.nextFilterId);\n    }\n    sendAsyncPromise(request) {\n        return new Promise((resolve, reject) => {\n            this.provider.sendAsync(request, (err, response) => {\n                if (err) {\n                    return reject(err);\n                }\n                if (Array.isArray(response) || response == null) {\n                    return reject(new Error(`unexpected response received: ${JSON.stringify(response)}`));\n                }\n                resolve(response);\n            });\n        });\n    }\n    deleteFilter(id) {\n        console.log(`Deleting filter (${id})`);\n        this.logFilters.delete(id);\n        this.blockFilters.delete(id);\n        this.pendingTransactionFilters.delete(id);\n        this.cursors.delete(id);\n        this.timeouts.delete(id);\n    }\n    async getLogFilterChanges(id) {\n        const filter = this.logFilters.get(id);\n        const cursorPosition = this.cursors.get(id);\n        if (!cursorPosition || !filter) {\n            return filterNotFoundError();\n        }\n        const currentBlockHeight = await this.getCurrentBlockHeight();\n        const toBlock = filter.toBlock === \"latest\" ? currentBlockHeight : filter.toBlock;\n        if (cursorPosition > currentBlockHeight) {\n            return emptyResult();\n        }\n        if (cursorPosition > filter.toBlock) {\n            return emptyResult();\n        }\n        console.log(`Fetching logs from ${cursorPosition} to ${toBlock} for filter ${id}`);\n        const response = await this.sendAsyncPromise(Object.assign(Object.assign({}, JSONRPC_TEMPLATE), { method: \"eth_getLogs\", params: [\n                paramFromFilter(Object.assign(Object.assign({}, filter), { fromBlock: cursorPosition, toBlock }))\n            ] }));\n        if (Array.isArray(response.result)) {\n            const blocks = response.result.map(log => util_1.intNumberFromHexString(log.blockNumber || \"0x0\"));\n            const highestBlock = Math.max(...blocks);\n            if (highestBlock && highestBlock > cursorPosition) {\n                const newCursorPosition = types_1.IntNumber(highestBlock + 1);\n                console.log(`Moving cursor position for filter (${id}) from ${cursorPosition} to ${newCursorPosition}`);\n                this.cursors.set(id, newCursorPosition);\n            }\n        }\n        return response;\n    }\n    async getBlockFilterChanges(id) {\n        const cursorPosition = this.cursors.get(id);\n        if (!cursorPosition) {\n            return filterNotFoundError();\n        }\n        const currentBlockHeight = await this.getCurrentBlockHeight();\n        if (cursorPosition > currentBlockHeight) {\n            return emptyResult();\n        }\n        console.log(`Fetching blocks from ${cursorPosition} to ${currentBlockHeight} for filter (${id})`);\n        const blocks = (await Promise.all(util_1.range(cursorPosition, currentBlockHeight + 1).map(i => this.getBlockHashByNumber(types_1.IntNumber(i))))).filter(hash => !!hash);\n        const newCursorPosition = types_1.IntNumber(cursorPosition + blocks.length);\n        console.log(`Moving cursor position for filter (${id}) from ${cursorPosition} to ${newCursorPosition}`);\n        this.cursors.set(id, newCursorPosition);\n        return Object.assign(Object.assign({}, JSONRPC_TEMPLATE), { result: blocks });\n    }\n    async getPendingTransactionFilterChanges(_id) {\n        // pending transaction filters are not supported\n        return Promise.resolve(emptyResult());\n    }\n    async setInitialCursorPosition(id, startBlock) {\n        const currentBlockHeight = await this.getCurrentBlockHeight();\n        const initialCursorPosition = typeof startBlock === \"number\" && startBlock > currentBlockHeight\n            ? startBlock\n            : currentBlockHeight;\n        this.cursors.set(id, initialCursorPosition);\n        return initialCursorPosition;\n    }\n    setFilterTimeout(id) {\n        const existing = this.timeouts.get(id);\n        if (existing) {\n            window.clearTimeout(existing);\n        }\n        const timeout = window.setTimeout(() => {\n            console.log(`Filter (${id}) timed out`);\n            this.deleteFilter(id);\n        }, TIMEOUT);\n        this.timeouts.set(id, timeout);\n    }\n    async getCurrentBlockHeight() {\n        const { result } = await this.sendAsyncPromise(Object.assign(Object.assign({}, JSONRPC_TEMPLATE), { method: \"eth_blockNumber\", params: [] }));\n        return util_1.intNumberFromHexString(util_1.ensureHexString(result));\n    }\n    async getBlockHashByNumber(blockNumber) {\n        const response = await this.sendAsyncPromise(Object.assign(Object.assign({}, JSONRPC_TEMPLATE), { method: \"eth_getBlockByNumber\", params: [util_1.hexStringFromIntNumber(blockNumber), false] }));\n        if (response.result && typeof response.result.hash === \"string\") {\n            return util_1.ensureHexString(response.result.hash);\n        }\n        return null;\n    }\n}\nexports.FilterPolyfill = FilterPolyfill;\nfunction filterFromParam(param) {\n    return {\n        fromBlock: intBlockHeightFromHexBlockHeight(param.fromBlock),\n        toBlock: intBlockHeightFromHexBlockHeight(param.toBlock),\n        addresses: param.address === undefined\n            ? null\n            : Array.isArray(param.address)\n                ? param.address\n                : [param.address],\n        topics: param.topics || []\n    };\n}\nexports.filterFromParam = filterFromParam;\nfunction paramFromFilter(filter) {\n    const param = {\n        fromBlock: hexBlockHeightFromIntBlockHeight(filter.fromBlock),\n        toBlock: hexBlockHeightFromIntBlockHeight(filter.toBlock),\n        topics: filter.topics\n    };\n    if (filter.addresses !== null) {\n        param.address = filter.addresses;\n    }\n    return param;\n}\nfunction intBlockHeightFromHexBlockHeight(value) {\n    if (value === undefined || value === \"latest\" || value === \"pending\") {\n        return \"latest\";\n    }\n    else if (value === \"earliest\") {\n        return types_1.IntNumber(0);\n    }\n    else if (util_1.isHexString(value)) {\n        return util_1.intNumberFromHexString(value);\n    }\n    throw new Error(`Invalid block option: ${value}`);\n}\nfunction hexBlockHeightFromIntBlockHeight(value) {\n    if (value === \"latest\") {\n        return value;\n    }\n    return util_1.hexStringFromIntNumber(value);\n}\nfunction filterNotFoundError() {\n    return Object.assign(Object.assign({}, JSONRPC_TEMPLATE), { error: { code: -32000, message: \"filter not found\" } });\n}\nfunction emptyResult() {\n    return Object.assign(Object.assign({}, JSONRPC_TEMPLATE), { result: [] });\n}\n"]},"metadata":{},"sourceType":"script"}