{"version":3,"file":"mindsorg-web3modal-angular.js","sources":["../../../projects/web3modal/src/lib/web3-modal/web3-modal.service.ts","../../../projects/web3modal/src/lib/web3-modal/web3-modal.component.ts","../../../projects/web3modal/src/lib/modal/modal.component.ts","../../../projects/web3modal/src/lib/web3-modal/web3-modal.module.ts","../../../projects/web3modal/src/public-api.ts","../../../projects/web3modal/src/mindsorg-web3modal-angular.ts"],"names":["NgCommonModule"],"mappings":"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","sourcesContent":["import { EventEmitter, Injectable, Optional } from '@angular/core';\nimport {\n  CONNECT_EVENT,\n  ERROR_EVENT,\n  IProviderControllerOptions,\n  Web3WalletConnector,\n  IProviderUserOptions\n} from '@mindsorg/web3modal-ts';\nimport { take } from 'rxjs/operators';\n\n@Injectable()\nexport class Web3ModalService {\n  private web3WalletConnector: Web3WalletConnector\n\n  public shouldOpen: EventEmitter<boolean> = new EventEmitter();\n  public providers: EventEmitter<IProviderUserOptions[]> = new EventEmitter();\n\n  constructor (@Optional() configOptions?: IProviderControllerOptions) {\n    this.web3WalletConnector = new Web3WalletConnector(configOptions)\n  }\n\n  async open() {\n    this.providers.next(this.web3WalletConnector.providers)\n\n    return await new Promise((resolve, reject) => {\n      this.web3WalletConnector.providerController.on(CONNECT_EVENT, provider => {\n        resolve(provider);\n      });\n  \n      this.web3WalletConnector.providerController.on(ERROR_EVENT, error => {\n        reject(error);\n      });\n\n      this.shouldOpen.next(true)\n\n      this.shouldOpen.pipe(take(1)).subscribe({\n        next: (open) => {\n          if (!open) {\n            reject('Dismissed modal');\n          }\n        }\n      })\n    }).finally(() => {\n      this.close()\n    })\n  }\n\n  setConfiguration(options: IProviderControllerOptions) {\n    this.web3WalletConnector.setConfiguration(options)\n  }\n\n  clearCachedProvider(): void {\n    this.web3WalletConnector.providerController.clearCachedProvider();\n  }\n\n  setCachedProvider(id: string): void {\n    this.web3WalletConnector.providerController.setCachedProvider(id);\n  }\n\n  close() {\n    this.shouldOpen.next(false)\n  }\n}\n","import {\n  Component,\n  Input,\n  OnDestroy,\n  OnInit,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { IProviderUserOptions } from '@mindsorg/web3modal-ts';\nimport { Web3ModalService } from './web3-modal.service';\n\n@Component({\n  selector: 'm-web3-modal',\n  templateUrl: 'web3-modal.component.html',\n  styleUrls: ['./web3-modal.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class Web3ModalComponent implements OnInit, OnDestroy {\n  open = false;\n  providers: IProviderUserOptions[] = [];\n  showMetamaskDownload: boolean;\n\n  private openSubscription: Subscription;\n  private providersSubscription: Subscription;\n  private readonly metamaskShopURL = 'https://metamask.io/download.html';\n\n  @Input() title: string;\n  @Input() description?: string;\n  @Input() descriptionGray?: string;\n  @Input() dismissText?: string;\n  @Input() promptMetamaskIfNotInstalled = false;\n\n  constructor(private service: Web3ModalService) {}\n\n  ngOnInit(): void {\n    this.openSubscription = this.service.shouldOpen.subscribe({\n      next: (open: boolean) => {\n        this.open = open;\n      },\n    });\n\n    this.providersSubscription = this.service.providers.subscribe({\n      next: (providers: IProviderUserOptions[]) => {\n        this.showMetamaskDownload =\n          this.promptMetamaskIfNotInstalled &&\n          !this.isMetamaskInProviders(providers);\n        this.providers = providers;\n      },\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.openSubscription.unsubscribe();\n    this.providersSubscription.unsubscribe();\n  }\n\n  close(): void {\n    this.service.close();\n  }\n\n  private isMetamaskInProviders(providers: IProviderUserOptions[]): boolean {\n    return providers.some((p) => p.name.toLowerCase() === 'metamask');\n  }\n\n  private openMetamaskDownloadPage(): void {\n    window.open(this.metamaskShopURL, '_blank');\n  }\n}\n","import { Component, EventEmitter, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'm-modal',\n  host: {\n    '[hidden]': 'hidden',\n  },\n  inputs: ['open', 'allowClose'],\n  outputs: ['closed'],\n  styleUrls: ['./modal.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  templateUrl: './modal.component.html',\n})\nexport class Modal {\n  allowClose: boolean = true;\n  hidden: boolean = true;\n  closed: EventEmitter<any> = new EventEmitter();\n\n  set _hidden(value: boolean) {\n    this.hidden = value;\n  }\n\n  set open(value: boolean) {\n    this.hidden = !value;\n  }\n\n  close(event) {\n    if (!this.allowClose) return;\n\n    this.hidden = !this.hidden;\n    this.closed.next(true);\n    event.stopPropagation();\n  }\n}\n","import { CommonModule as NgCommonModule } from '@angular/common';\nimport {\n  NgModule,\n} from '@angular/core';\nimport { Modal } from '../modal/modal.component';\nimport { Web3ModalComponent } from './web3-modal.component';\n\n@NgModule({\n  imports: [NgCommonModule],\n  declarations: [Modal, Web3ModalComponent],\n  exports: [Web3ModalComponent],\n})\nexport class Web3ModalModule { }","/*\n * Public API Surface of web3modal\n */\n\nexport * from './lib/web3-modal/web3-modal.service';\nexport * from './lib/web3-modal/web3-modal.component';\nexport * from './lib/web3-modal/web3-modal.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {Modal as Éµa} from './lib/modal/modal.component';"]}